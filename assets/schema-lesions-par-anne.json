<script>
// setup API options
const options = {
  config: {
    // Vega-Lite default configuration
  },
  init: (view) => {
    // initialize tooltip handler
    view.tooltip(new vegaTooltip.Handler().call);
  },
  view: {
    // view constructor options
    // remove the loader if you don't want to default to vega-datasets!
    loader: vega.loader({
      baseURL: "https://cdn.jsdelivr.net/npm/vega-datasets@2/",
    }),
    renderer: "canvas",
  },
};

// register vega and vega-lite with the API
vl.register(vega, vegaLite, options);

// now you can use the API!

vl.markBar({ tooltip: true })
  .data([
    { Année: "2013", Lésions: 3 }, { Année: "2014", Lésions: 2 }, { Année: "2015", Lésions: 3 },
    { Année: "2016", Lésions: 0 }, { Année: "2017", Lésions: 5 }, { Année: "2018", Lésions: 2 },
    { Année: "2019", Lésions: 1 }, { Année: "2020", Lésions: 4 }, { Année: "2021", Lésions: 1 },
  ])
  .encode(
    vl.y().fieldQ("Lésions").title("Nombre de lésions"),
    vl.x().fieldN("Année").title("Année"),
    vl.tooltip([vl.fieldQ("Lésions"), vl.fieldN("Année")])
  )
  .render()

  
  .then(viewElement => {
    // render returns a promise to a DOM element containing the chart
    // viewElement.value contains the Vega View object instance
    document.getElementById('view').appendChild(viewElement);

    





  });

  
</script>	